{
    "sourceFile": "app/Http/Controllers/SupplierController.php",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1641699951117,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1641699968485,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,9 @@\n             Log::error('SupplierController/create unauthorized access error! auth user_id='.Auth::user()->user_id);\n             return view('error');\n         }\n \n-        // 工場\n+        // 工場りｓ\n \n         return view('supplier.register');\n     }\n \n"
                },
                {
                    "date": 1641706680535,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,9 +56,9 @@\n         }\n \n         // 工場リストの取得\n         $plants = Plant::all();\n-        if(!)\n+        if(!p)\n \n         // 店舗リストの取得\n         $shops = Shop::all();\n         if(!$shops){\n"
                }
            ],
            "date": 1641699951117,
            "name": "Commit-0",
            "content": "<?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Models\\Supplier;\nuse App\\Models\\Plant;\nuse App\\Models\\Shop;\nuse App\\Models\\Address;\nuse App\\Models\\SupplierPlantRelation;\nuse App\\Models\\SupplierShopRelation;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Support\\Facades\\Log;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Providers\\RouteServiceProvider;\nuse Illuminate\\Auth\\Events\\Registered;\nuse Illuminate\\Support\\Facades\\Auth;\nuse Illuminate\\Support\\Facades\\Hash;\nuse Illuminate\\Validation\\Rules;\n\nclass SupplierController extends Controller\n{\n    \n    // 仕入業者一覧画面表示\n    public function index()\n    {\n        // セッション切れ\n        if(empty(Auth::user()))\n        {\n            return redirect('/');\n        }\n\n        Log::info('SupplierController/index start! auth user_id='.Auth::user()->user_id);\n\n        $suppliers = Supplier::all();\n        return view('supplier.index', compact('suppliers'));\n    }\n\n\n\n    // 仕入業者登録画面表示\n    public function create()\n    {\n        // セッション切れ\n        if(empty(Auth::user()))\n        {\n            return redirect('/');\n        }\n\n        Log::info('SupplierController/create start! auth user_id='.Auth::user()->user_id);\n\n        // 管理者権限以外でのアクセス\n        if(Auth::user()->role !== '1')\n        {\n            Log::error('SupplierController/create unauthorized access error! auth user_id='.Auth::user()->user_id);\n            return view('error');\n        }\n\n        \n\n        return view('supplier.register');\n    }\n\n\n\n    // 仕入業者登録処理\n    public function store(Request $request)\n    {\n        if(empty(Auth::user()))\n        {\n            return redirect('/');\n        }\n\n        Log::info('SupplierController/store start! auth user_id='.Auth::user()->user_id);\n        \n        // 管理者権限以外でのアクセス\n        if(Auth::user()->role !== '1')\n        {\n            Log::error('SupplierController/store unauthorized access error! auth user_id='.Auth::user()->user_id);\n            return view('error');\n        }\n\n        $request->validate([\n            'login_id' => ['bail', 'required', 'string', new isLoginFormat, 'between:8,16'],\n            'emp_no' => ['bail', 'required', 'string', 'regex:/^[A-Za-z0-9]*$/', 'size:4', 'unique:suppliers,emp_no'],\n            'last_name' => ['bail', 'required', 'string', 'max:20'],\n            'first_name' => ['bail', 'required', 'string', 'max:20'],\n            'email' => ['bail', 'required', 'string','regex:/^([a-zA-Z0-9])+([a-zA-Z0-9\\._-])*@([a-zA-Z0-9_-])+([a-zA-Z0-9\\._-]+)+$/', 'email', 'max:255', 'unique:suppliers'],\n            'password' => ['bail', 'required', 'regex:/^[A-Za-z0-9]*$/', 'between:8,16', 'confirmed'],\n            'tel_1' => ['bail', 'required', 'string', 'numeric', 'digits_between:1,5'],\n            'tel_2' => ['bail', 'required', 'string', 'numeric', 'digits_between:1,5'],\n            'tel_3' => ['bail', 'required', 'string', 'numeric', 'digits_between:1,5'],\n            'role' => ['bail', 'required', 'in:1,2']\n        ]);\n\n        $supplier = Supplier::create([\n            'login_id' => $request->login_id,\n            'emp_no' => $request->emp_no,\n            'last_name' => $request->last_name,\n            'first_name' => $request->first_name,\n            'email' => $request->email,\n            'password' => Hash::make($request->password),\n            'tel' => $request->tel_1.$request->tel_2.$request->tel_3,\n            'role' => $request->role,\n        ]);\n        if(!$supplier)\n        {\n            Log::error('SupplierController/store create() error! auth user_id='.Auth::user()->user_id);\n            return view('error');\n        }\n        return redirect('supplier');\n    }\n\n\n    // 仕入業者詳細画面表示\n    public function show($supplier_id)\n    {\n        if(empty(Auth::user()))\n        {\n            return redirect('/');\n        }\n\n        Log::info('SupplierController/show start!');\n        \n        if(!$supplier_id)\n        {\n            Log::error('SupplierController/show no supplier_id error! auth user_id='.Auth::user()->user_id.' supplier_id='.$supplier_id);\n            return view('error');\n        }\n\n        $supplier = Supplier::find($supplier_id);\n        if(!$supplier)\n        {\n            Log::error('SupplierController/show find() error! auth user_id='.Auth::user()->user_id.' supplier_id='.$supplier_id);\n            return view('error');\n        }\n\n        return view('supplier/detail', compact('user'));\n    }\n\n\n    // 仕入業者編集画面表示\n    public function edit($supplier_id)\n    {\n        if(empty(Auth::user()))\n        {\n            return redirect('/');\n        }\n\n        Log::info('SupplierController/edit start!');\n        \n        // 管理者権限以外でのアクセス\n        if(Auth::user()->role !== '1')\n        {\n            Log::error('SupplierController/edit unauthorized access error! auth user_id='.Auth::user()->user_id);\n            return view('error');\n        }\n\n        if(!$supplier_id)\n        {\n            Log::error('SupplierController/edit no supplier_id error! auth user_id='.Auth::user()->user_id.' supplier_id='.$supplier_id);\n            return view('error');\n        }\n        $supplier = Supplier::find($supplier_id);\n        if(!$supplier)\n        {\n            Log::error('SupplierController/edit find() error! auth user_id='.Auth::user()->user_id.' supplier_id='.$supplier_id);;\n            return view('error');\n        }\n\n        return view('supplier/edit', compact('user'));\n    }\n\n\n    // 仕入業者更新処理\n    public function update(Request $request)\n    {\n        if(empty(Auth::user()))\n        {\n            return redirect('/');\n        }\n\n        Log::info('SupplierController/update start!');\n        \n        // 管理者権限以外でのアクセス\n        if(Auth::user()->role !== '1')\n        {\n            Log::error('SupplierController/update unauthorized access error! auth user_id='.Auth::user()->user_id);\n            return view('error');\n        }\n\n        $request->validate([\n            'login_id' => ['bail', 'required', 'string', new isLoginFormat, 'between:8,16'],\n            'emp_no' => ['bail', 'required', 'string', 'regex:/^[A-Za-z0-9]*$/', 'size:4'],\n            'last_name' => ['bail', 'required', 'string', 'max:20'],\n            'first_name' => ['bail', 'required', 'string', 'max:20'],\n            'email' => ['bail', 'required', 'string','regex:/^([a-zA-Z0-9])+([a-zA-Z0-9\\._-])*@([a-zA-Z0-9_-])+([a-zA-Z0-9\\._-]+)+$/', 'email', 'max:255'],\n            'password' => ['bail', 'required', 'regex:/^[A-Za-z0-9]*$/', 'between:8,16', 'confirmed'],\n            'tel' => ['bail', 'required', 'string', 'numeric', 'digits_between:10,11'],\n            'role' => ['bail', 'required', 'in:1,2']\n        ]);\n\n        if(!$request->supplier_id)\n        {\n            Log::error('SupplierController/update no supplier_id error! auth user_id='.Auth::user()->user_id.' supplier_id='.$request->supplier_id);\n            return view('error');\n        }\n\n        $result = Supplier::where('supplier_id', $request->supplier_id)\n            ->update([\n                'login_id' => $request->login_id,\n                'emp_no' => $request->emp_no,\n                'last_name' => $request->last_name,\n                'first_name' => $request->first_name,\n                'email' => $request->email,\n                'password' => Hash::make($request->password),\n                'tel' => $request->tel,\n                'role' => $request->role,\n        ]);\n        if(!$result)\n        {\n            Log::error('SupplierController/update update() error! auth user_id='.Auth::user()->user_id.' supplier_id='.$supplier_id);\n            return view('error');\n        }\n\n        return redirect('supplier');\n    }\n\n\n    // 仕入業者削除処理\n    public function destroy(Request $request)\n    {\n        if(empty(Auth::user()))\n        {\n            return redirect('/');\n        }\n\n        Log::info('SupplierController/update start!');\n        \n        // 管理者権限以外でのアクセス\n        if(Auth::user()->role !== '1')\n        {\n            Log::error('SupplierController/destroy unauthorized access error! auth user_id='.Auth::user()->user_id);\n            return view('error');\n        }\n\n        if(!$request->supplier_id)\n        {\n            Log::error('SupplierController/destroy no supplier_id error! auth user_id='.Auth::user()->user_id.' supplier_id='.$supplier_id);\n            return view('error');\n        }\n        $supplier = Supplier::find($request->supplier_id);\n        $result = $supplier->delete();\n        if(!$result)\n        {\n            Log::error('SupplierController/destroy delete() error! auth user_id='.Auth::user()->user_id.' supplier_id='.$supplier_id);\n            return view('error');\n        }\n\n        return redirect('supplier');\n    }\n}"
        }
    ]
}