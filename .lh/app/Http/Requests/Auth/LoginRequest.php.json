{
    "sourceFile": "app/Http/Requests/Auth/LoginRequest.php",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1638660077247,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1638660354904,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,9 @@\n use Illuminate\\Support\\Facades\\Auth;\n use Illuminate\\Support\\Facades\\RateLimiter;\n use Illuminate\\Support\\Str;\n use Illuminate\\Validation\\ValidationException;\n+use App\\Rules\\isLoginFormat;    // è¿½åŠ \n \n class LoginRequest extends FormRequest\n {\n     /**\n"
                },
                {
                    "date": 1638666149810,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,9 @@\n     public function rules()\n     {\n         return [\n             'login_id' => ['bail', 'required', 'string', new isLoginFormat, 'between:8,16'],\n-            'password' => ['required', 'string', 'alpha_num', 'min:8', 'max:16'],\n+            'password' => [fsda'required', 'string', 'alpha_num', 'min:8', 'max:16'],\n         ];\n     }\n \n     /**\n"
                },
                {
                    "date": 1638672382971,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,9 @@\n     public function rules()\n     {\n         return [\n             'login_id' => ['bail', 'required', 'string', new isLoginFormat, 'between:8,16'],\n-            'password' => [fsda'required', 'string', 'alpha_num', 'min:8', 'max:16'],\n+            'password' => ['bail', 'required', 'alpha_num', 'between:8,16', 'confirmed'],\n         ];\n     }\n \n     /**\n"
                },
                {
                    "date": 1638672391667,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,9 @@\n     public function rules()\n     {\n         return [\n             'login_id' => ['bail', 'required', 'string', new isLoginFormat, 'between:8,16'],\n-            'password' => ['bail', 'required', 'alpha_num', 'between:8,16', 'confirmed'],\n+            'password' => ['bail', 'required', 'alpha_num', 'between:8,16'],\n         ];\n     }\n \n     /**\n"
                },
                {
                    "date": 1638692501863,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,9 @@\n     public function rules()\n     {\n         return [\n             'login_id' => ['bail', 'required', 'string', new isLoginFormat, 'between:8,16'],\n-            'password' => ['bail', 'required', 'alpha_num', 'between:8,16'],\n+            'password' => ['bail', 'required'],\n         ];\n     }\n \n     /**\n"
                }
            ],
            "date": 1638660077247,
            "name": "Commit-0",
            "content": "<?php\n\nnamespace App\\Http\\Requests\\Auth;\n\nuse Illuminate\\Auth\\Events\\Lockout;\nuse Illuminate\\Foundation\\Http\\FormRequest;\nuse Illuminate\\Support\\Facades\\Auth;\nuse Illuminate\\Support\\Facades\\RateLimiter;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Validation\\ValidationException;\n\nclass LoginRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     *\n     * @return bool\n     */\n    public function authorize()\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     *\n     * @return array\n     */\n    public function rules()\n    {\n        return [\n            'login_id' => ['bail', 'required', 'string', new isLoginFormat, 'between:8,16'],\n            'password' => ['required', 'string', 'alpha_num', 'min:8', 'max:16'],\n        ];\n    }\n\n    /**\n     * Attempt to authenticate the request's credentials.\n     *\n     * @return void\n     *\n     * @throws \\Illuminate\\Validation\\ValidationException\n     */\n    public function authenticate()\n    {\n        $this->ensureIsNotRateLimited();\n\n        if (! Auth::attempt($this->only('login_id', 'password'), $this->boolean('remember'))) {\n            RateLimiter::hit($this->throttleKey());\n\n            throw ValidationException::withMessages([\n                'login_id' => __('auth.failed'),\n            ]);\n        }\n\n        RateLimiter::clear($this->throttleKey());\n    }\n\n    /**\n     * Ensure the login request is not rate limited.\n     *\n     * @return void\n     *\n     * @throws \\Illuminate\\Validation\\ValidationException\n     */\n    public function ensureIsNotRateLimited()\n    {\n        if (! RateLimiter::tooManyAttempts($this->throttleKey(), 5)) {\n            return;\n        }\n\n        event(new Lockout($this));\n\n        $seconds = RateLimiter::availableIn($this->throttleKey());\n\n        throw ValidationException::withMessages([\n            'login_id' => trans('auth.throttle', [\n                'seconds' => $seconds,\n                'minutes' => ceil($seconds / 60),\n            ]),\n        ]);\n    }\n\n    /**\n     * Get the rate limiting throttle key for the request.\n     *\n     * @return string\n     */\n    public function throttleKey()\n    {\n        return Str::lower($this->input('login_id')).'|'.$this->ip();\n    }\n}\n"
        }
    ]
}