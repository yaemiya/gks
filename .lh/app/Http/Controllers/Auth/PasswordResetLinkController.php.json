{
    "sourceFile": "app/Http/Controllers/Auth/PasswordResetLinkController.php",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1638672995126,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1638673016874,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n      */\n     public function store(Request $request)\n     {\n         $request->validate([\n-            'email' => ['required', 'regex:/^.+@.+$/i''email'],\n+            'email' => ['required', 'regex:/^([a-zA-Z0-9])+([a-zA-Z0-9\\._-])*@([a-zA-Z0-9_-])+([a-zA-Z0-9\\._-]+)+$/', 'email'],\n         ]);\n \n         // We will send the password reset link to this user. Once we have attempted\n         // to send the link, we will examine the response then see the message we\n"
                }
            ],
            "date": 1638672995125,
            "name": "Commit-0",
            "content": "<?php\n\nnamespace App\\Http\\Controllers\\Auth;\n\nuse App\\Http\\Controllers\\Controller;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Support\\Facades\\Password;\n\nclass PasswordResetLinkController extends Controller\n{\n    /**\n     * Display the password reset link request view.\n     *\n     * @return \\Illuminate\\View\\View\n     */\n    public function create()\n    {\n        return view('auth.forgot-password');\n    }\n\n    /**\n     * Handle an incoming password reset link request.\n     *\n     * @param  \\Illuminate\\Http\\Request  $request\n     * @return \\Illuminate\\Http\\RedirectResponse\n     *\n     * @throws \\Illuminate\\Validation\\ValidationException\n     */\n    public function store(Request $request)\n    {\n        $request->validate([\n            'email' => ['required', 'regex:/^.+@.+$/i''email'],\n        ]);\n\n        // We will send the password reset link to this user. Once we have attempted\n        // to send the link, we will examine the response then see the message we\n        // need to show to the user. Finally, we'll send out a proper response.\n        $status = Password::sendResetLink(\n            $request->only('email')\n        );\n\n        return $status == Password::RESET_LINK_SENT\n                    ? back()->with('status', __($status))\n                    : back()->withInput($request->only('email'))\n                            ->withErrors(['email' => __($status)]);\n    }\n}\n"
        }
    ]
}